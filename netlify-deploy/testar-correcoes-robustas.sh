#!/bin/bash

echo "üîß Testando Corre√ß√µes dos Bot√µes - Vers√£o Robusta"
echo "================================================="

cd /home/nicps/Documents/Projetos/RifaThomas/netlify-deploy

# Verificar se as fun√ß√µes robustas foram adicionadas
echo "üìã Verificando se as corre√ß√µes foram aplicadas..."

# Verificar se normalizeString existe
if grep -q "function normalizeString" admin.js; then
    echo "‚úÖ Fun√ß√£o normalizeString encontrada"
else
    echo "‚ùå Fun√ß√£o normalizeString N√ÉO encontrada"
fi

# Verificar se isDoacaoRobusta existe
if grep -q "function isDoacaoRobusta" admin.js; then
    echo "‚úÖ Fun√ß√£o isDoacaoRobusta encontrada"
else
    echo "‚ùå Fun√ß√£o isDoacaoRobusta N√ÉO encontrada"
fi

# Verificar se isStatusPendenteRobusta existe
if grep -q "function isStatusPendenteRobusta" admin.js; then
    echo "‚úÖ Fun√ß√£o isStatusPendenteRobusta encontrada"
else
    echo "‚ùå Fun√ß√£o isStatusPendenteRobusta N√ÉO encontrada"
fi

# Verificar se createActionButtons foi atualizada
if grep -q "isDoacaoRobusta(purchase)" admin.js; then
    echo "‚úÖ createActionButtons usando l√≥gica robusta"
else
    echo "‚ùå createActionButtons N√ÉO usando l√≥gica robusta"
fi

# Verificar se loadParticipants foi atualizada  
if grep -q "const isDonation = isDoacaoRobusta(purchase)" admin.js; then
    echo "‚úÖ loadParticipants usando l√≥gica robusta"
else
    echo "‚ùå loadParticipants N√ÉO usando l√≥gica robusta"
fi

echo ""
echo "üéØ Campos que a nova l√≥gica verifica:"
echo "   - purchase.tipo (normalizado)"
echo "   - purchase.metodoPagamento (normalizado)"
echo "   - purchase.paymentMethod (normalizado)"
echo "   - purchase.observacoes (normalizado)"
echo "   - purchase.notes (normalizado)"
echo ""
echo "üîç Varia√ß√µes aceitas para doa√ß√£o:"
echo "   - doacao, doac√£o, doa√ß√£o, donation"
echo ""
echo "üîç Varia√ß√µes aceitas para pendente:"
echo "   - pendente, pending, aguardando, nao confirmado, naoconfirmado"
echo ""

# Testar com os scripts de debug
echo "üåê Abrindo p√°ginas de debug para teste..."

# Abrir debug espec√≠fico
if [[ -f "debug-casos-especificos.html" ]]; then
    echo "üìä Abrindo debug de casos espec√≠ficos..."
    if command -v xdg-open &> /dev/null; then
        xdg-open "debug-casos-especificos.html" 
    elif command -v open &> /dev/null; then
        open "debug-casos-especificos.html"
    fi
fi

# Abrir inspetor Firebase
if [[ -f "inspetor-firebase.html" ]]; then
    echo "üî¨ Abrindo inspetor Firebase..."
    if command -v xdg-open &> /dev/null; then
        xdg-open "inspetor-firebase.html" 
    elif command -v open &> /dev/null; then
        open "inspetor-firebase.html"
    fi
fi

echo ""
echo "üìã PR√ìXIMOS PASSOS PARA TESTE:"
echo "1. Nas p√°ginas abertas, verifique se ainda h√° casos sem bot√µes"
echo "2. Compare os dados dos casos com e sem bot√µes"
echo "3. Use a fun√ß√£o de 'Teste Manual da L√≥gica' para validar"
echo "4. Se ainda houver problemas, analise os dados brutos no inspetor"
echo ""
echo "‚úÖ Corre√ß√µes aplicadas! Agora teste na p√°gina admin real."
