#!/bin/bash

# ===============================================
# VALIDA√á√ÉO FINAL - Sistema Auto-Sync
# Rifa Thomas - 13 de Junho de 2025
# ===============================================

echo "üöÄ INICIANDO VALIDA√á√ÉO FINAL DO SISTEMA AUTO-SYNC"
echo "=================================================="
echo ""

# Fun√ß√£o para mostrar resultados
show_result() {
    if [ $1 -eq 0 ]; then
        echo "‚úÖ $2"
    else
        echo "‚ùå $2"
    fi
}

# Contador de sucessos
SUCCESS_COUNT=0
TOTAL_TESTS=10

echo "üìÅ Verificando arquivos principais..."
echo "------------------------------------"

# 1. Verificar se admin.html existe e tem auto-sync
if grep -q "auto-sync-controls" admin.html; then
    show_result 0 "admin.html cont√©m controles auto-sync"
    ((SUCCESS_COUNT++))
else
    show_result 1 "admin.html N√ÉO cont√©m controles auto-sync"
fi

# 2. Verificar se admin.js tem sistema auto-sync
if grep -q "autoSyncConfig" admin.js; then
    show_result 0 "admin.js cont√©m sistema auto-sync"
    ((SUCCESS_COUNT++))
else
    show_result 1 "admin.js N√ÉO cont√©m sistema auto-sync"
fi

# 3. Verificar fun√ß√£o refreshData
if grep -q "function refreshData" admin.js; then
    show_result 0 "Fun√ß√£o refreshData implementada"
    ((SUCCESS_COUNT++))
else
    show_result 1 "Fun√ß√£o refreshData N√ÉO encontrada"
fi

# 4. Verificar fun√ß√£o toggleAutoSync
if grep -q "function toggleAutoSync" admin.js; then
    show_result 0 "Fun√ß√£o toggleAutoSync implementada"
    ((SUCCESS_COUNT++))
else
    show_result 1 "Fun√ß√£o toggleAutoSync N√ÉO encontrada"
fi

# 5. Verificar sistema de emerg√™ncia
if grep -q "forcarBotoesEmergencia" admin.js; then
    show_result 0 "Sistema de emerg√™ncia implementado"
    ((SUCCESS_COUNT++))
else
    show_result 1 "Sistema de emerg√™ncia N√ÉO encontrado"
fi

echo ""
echo "üé® Verificando interface..."
echo "---------------------------"

# 6. Verificar bot√µes de controle no HTML
if grep -q "Atualizar Agora" admin.html; then
    show_result 0 "Bot√£o 'Atualizar Agora' presente"
    ((SUCCESS_COUNT++))
else
    show_result 1 "Bot√£o 'Atualizar Agora' N√ÉO encontrado"
fi

# 7. Verificar se√ß√£o de emerg√™ncia
if grep -q "CORRE√á√ÉO DE EMERG√äNCIA" admin.html; then
    show_result 0 "Se√ß√£o de emerg√™ncia presente"
    ((SUCCESS_COUNT++))
else
    show_result 1 "Se√ß√£o de emerg√™ncia N√ÉO encontrada"
fi

# 8. Verificar indicadores visuais
if grep -q "sync-progress" admin.html; then
    show_result 0 "Indicadores de progresso presentes"
    ((SUCCESS_COUNT++))
else
    show_result 1 "Indicadores de progresso N√ÉO encontrados"
fi

echo ""
echo "üß™ Verificando ferramentas de teste..."
echo "-------------------------------------"

# 9. Verificar p√°gina de teste
if [ -f "teste-auto-sync.html" ]; then
    show_result 0 "P√°gina de teste auto-sync existe"
    ((SUCCESS_COUNT++))
else
    show_result 1 "P√°gina de teste auto-sync N√ÉO existe"
fi

# 10. Verificar documenta√ß√£o
if [ -f "SISTEMA_AUTO_SYNC_IMPLEMENTADO.md" ]; then
    show_result 0 "Documenta√ß√£o auto-sync existe"
    ((SUCCESS_COUNT++))
else
    show_result 1 "Documenta√ß√£o auto-sync N√ÉO existe"
fi

echo ""
echo "üìä RESULTADO FINAL"
echo "=================="
echo ""

# Calcular porcentagem
PERCENTAGE=$((SUCCESS_COUNT * 100 / TOTAL_TESTS))

echo "‚úÖ Testes Passou: $SUCCESS_COUNT/$TOTAL_TESTS"
echo "üìà Taxa de Sucesso: $PERCENTAGE%"
echo ""

if [ $PERCENTAGE -ge 90 ]; then
    echo "üéâ EXCELENTE! Sistema pronto para produ√ß√£o!"
    echo "üöÄ Confiabilidade: ALTA ($PERCENTAGE%)"
    echo ""
    echo "üìã PR√ìXIMOS PASSOS:"
    echo "1. üì§ Deploy para servidor de produ√ß√£o"
    echo "2. üß™ Teste em ambiente real"
    echo "3. üë• Treinamento dos administradores"
    echo "4. üìä Monitoramento de performance"
    exit 0
elif [ $PERCENTAGE -ge 70 ]; then
    echo "‚ö†Ô∏è  BOM! Sistema funcional com algumas melhorias necess√°rias"
    echo "üîß Confiabilidade: M√âDIA ($PERCENTAGE%)"
    echo ""
    echo "üõ†Ô∏è  A√á√ïES RECOMENDADAS:"
    echo "1. Verificar itens que falharam"
    echo "2. Implementar corre√ß√µes"
    echo "3. Executar nova valida√ß√£o"
    exit 1
else
    echo "‚ùå PROBLEMAS! Sistema precisa de corre√ß√µes"
    echo "üî¥ Confiabilidade: BAIXA ($PERCENTAGE%)"
    echo ""
    echo "üö® A√á√ïES URGENTES:"
    echo "1. Revisar implementa√ß√£o"
    echo "2. Corrigir erros encontrados"
    echo "3. Re-executar valida√ß√£o completa"
    exit 2
fi
