#!/bin/bash

# Script para remover elementos de debug e preparar para produ√ß√£o
echo "üöÄ PREPARANDO PARA PRODU√á√ÉO - RIFA THOMAS"
echo "========================================"

# Verificar se estamos no diret√≥rio correto
if [ ! -f "index.html" ] || [ ! -f "script.js" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio netlify-deploy"
    exit 1
fi

echo "‚úÖ Diret√≥rio correto detectado"
echo ""

# Fazer backup antes das altera√ß√µes
backup_dir="backup-antes-producao-$(date +%Y%m%d-%H%M%S)"
mkdir -p "$backup_dir"
cp index.html script.js "$backup_dir/"
echo "‚úÖ Backup criado em: $backup_dir"

echo ""
echo "üßπ REMOVENDO ELEMENTOS DE DEBUG:"
echo "--------------------------------"

# Remover bot√£o debug do HTML
if grep -q "debugRifaNumbers()" index.html; then
    # Comentar a linha do bot√£o debug
    sed -i 's/.*debugRifaNumbers().*/<!-- DEBUG BUTTON REMOVIDO PARA PRODU√á√ÉO -->/' index.html
    echo "‚úÖ Bot√£o debug removido do HTML"
else
    echo "‚ÑπÔ∏è Bot√£o debug j√° foi removido"
fi

# Remover √°rea de notifica√ß√£o debug se n√£o necess√°ria (comentar apenas)
if grep -q "notification-area" index.html; then
    sed -i 's/.*notification-area.*/<!-- √ÅREA DE NOTIFICA√á√ÉO DEBUG (comentada para produ√ß√£o) -->/' index.html
    echo "‚úÖ √Årea de notifica√ß√£o debug comentada"
fi

# Reduzir logs no JavaScript (manter apenas logs essenciais)
echo ""
echo "üîá CONFIGURANDO LOGS PARA PRODU√á√ÉO:"
echo "----------------------------------"

# Criar vers√£o de produ√ß√£o do script.js com logs reduzidos
cp script.js script-development.js
echo "‚úÖ Backup de desenvolvimento salvo como script-development.js"

# Comentar console.log n√£o essenciais (manter apenas os importantes)
sed -i 's/^[[:space:]]*console\.log.*Debug:/\/\/ &/' script.js
sed -i 's/^[[:space:]]*console\.log.*üîß:/\/\/ &/' script.js
sed -i 's/^[[:space:]]*console\.log.*debug:/\/\/ &/' script.js

echo "‚úÖ Logs de debug comentados (logs essenciais mantidos)"

echo ""
echo "üìä OTIMIZANDO PARA PRODU√á√ÉO:"
echo "----------------------------"

# Verificar se existem TODOs ou FIXMEs
todo_count=$(grep -c "TODO\|FIXME\|XXX" *.js *.html 2>/dev/null || echo "0")
if [ "$todo_count" -gt 0 ]; then
    echo "‚ö†Ô∏è Encontrados $todo_count coment√°rios TODO/FIXME/XXX"
    echo "   Revise antes do deploy final"
else
    echo "‚úÖ Nenhum TODO/FIXME pendente encontrado"
fi

# Verificar tamanho dos arquivos
echo ""
echo "üìè TAMANHOS DOS ARQUIVOS:"
for file in index.html script.js admin.js styles.css; do
    if [ -f "$file" ]; then
        size=$(stat -c%s "$file" 2>/dev/null || stat -f%z "$file" 2>/dev/null)
        echo "   $file: ${size} bytes"
    fi
done

echo ""
echo "üîí CONFIGURA√á√ïES DE SEGURAN√áA:"
echo "------------------------------"

# Verificar se h√° chaves de API expostas
if grep -q "AIza\|firebase.*apiKey" *.js *.html 2>/dev/null; then
    echo "‚ö†Ô∏è ATEN√á√ÉO: Poss√≠veis chaves de API detectadas"
    echo "   Verifique se est√£o configuradas corretamente para produ√ß√£o"
else
    echo "‚úÖ Nenhuma chave de API exposta detectada"
fi

echo ""
echo "üöÄ CHECKLIST FINAL PARA DEPLOY:"
echo "==============================="

checklist=(
    "‚úÖ Backup realizado"
    "‚úÖ Elementos debug removidos"
    "‚úÖ Logs de produ√ß√£o configurados"
    "‚ö†Ô∏è Testar funcionalidade ap√≥s remo√ß√£o debug"
    "‚ö†Ô∏è Configurar Firebase para produ√ß√£o"
    "‚ö†Ô∏è Configurar dom√≠nio personalizado (se aplic√°vel)"
    "‚ö†Ô∏è Configurar SSL/HTTPS"
    "‚ö†Ô∏è Testar em diferentes dispositivos"
)

for item in "${checklist[@]}"; do
    echo "$item"
done

echo ""
echo "üìù COMANDOS √öTEIS:"
echo "=================="
echo "# Restaurar vers√£o de desenvolvimento:"
echo "cp script-development.js script.js"
echo ""
echo "# Testar vers√£o de produ√ß√£o:"
echo "python3 -m http.server 8080"
echo ""
echo "# Deploy no Netlify (se configurado):"
echo "netlify deploy --prod"

echo ""
echo "‚ú® PREPARA√á√ÉO PARA PRODU√á√ÉO CONCLU√çDA!"
echo ""
echo "‚ö†Ô∏è IMPORTANTE: Teste a aplica√ß√£o antes do deploy final"
echo "   Alguns elementos debug foram removidos e podem afetar a funcionalidade"
echo ""
echo "üîó Teste em: http://localhost:8080"
