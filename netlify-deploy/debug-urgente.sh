#!/bin/bash

echo "üö® DEBUG URGENTE - Identificar Problema dos Bot√µes"
echo "=================================================="

cd /home/nicps/Documents/Projetos/RifaThomas/netlify-deploy

echo "‚ö° SITUA√á√ÉO ATUAL:"
echo "   - Bot√µes sumiram ap√≥s as altera√ß√µes"
echo "   - Fun√ß√£o createActionButtons foi simplificada ao m√°ximo"
echo "   - Bot√µes b√°sicos (Editar/Debug) devem SEMPRE aparecer"
echo ""

echo "üîß A√á√ÉO IMEDIATA:"
echo "================"

# Abrir p√°gina de debug
echo "1. üß™ Abrindo p√°gina de debug urgente..."
if command -v xdg-open &> /dev/null; then
    xdg-open "debug-urgente-botoes.html"
elif command -v open &> /dev/null; then
    open "debug-urgente-botoes.html"
else
    echo "   ‚ö†Ô∏è Abra manualmente: file://$(pwd)/debug-urgente-botoes.html"
fi

sleep 2

# Abrir p√°gina admin tamb√©m
echo "2. üîß Abrindo p√°gina admin real..."
if [[ -f "admin.html" ]]; then
    if command -v xdg-open &> /dev/null; then
        xdg-open "admin.html"
    elif command -v open &> /dev/null; then
        open "admin.html"
    else
        echo "   ‚ö†Ô∏è Abra manualmente: file://$(pwd)/admin.html"
    fi
fi

echo ""
echo "üìã INSTRU√á√ïES URGENTES:"
echo "======================="
echo "1. üß™ Na p√°gina DEBUG URGENTE:"
echo "   ‚Ä¢ Clique em 'Testar Fun√ß√£o Isolada' - deve mostrar bot√µes"
echo "   ‚Ä¢ Clique em 'Testar com Admin.js' - verifica se o arquivo est√° carregando"
echo "   ‚Ä¢ Clique em 'Testar com Dados Reais' - simula dados da sua imagem"
echo "   ‚Ä¢ Verifique se aparecem bot√µes renderizados na tela"
echo ""
echo "2. üîß Na p√°gina ADMIN real:"
echo "   ‚Ä¢ Fa√ßa login normal"
echo "   ‚Ä¢ Abra F12 (Console de Desenvolvedor)" 
echo "   ‚Ä¢ Procure por logs [BUTTON-DEBUG] no console"
echo "   ‚Ä¢ Verifique se h√° algum erro em vermelho"
echo ""
echo "3. üîç DIAGN√ìSTICOS POSS√çVEIS:"
echo "   ‚Ä¢ Se fun√ß√£o isolada funciona MAS admin real n√£o = problema no carregamento"
echo "   ‚Ä¢ Se console mostra erros = problema de JavaScript"
echo "   ‚Ä¢ Se n√£o h√° logs [BUTTON-DEBUG] = fun√ß√£o n√£o est√° sendo chamada"
echo "   ‚Ä¢ Se HTML √© gerado mas n√£o aparece = problema de CSS ou DOM"
echo ""

# Verificar arquivo admin.js
echo "üîç VERIFICA√á√ÉO R√ÅPIDA DO ARQUIVO:"
echo "================================"

if [[ -f "admin.js" ]]; then
    echo "‚úÖ admin.js existe"
    
    if grep -q "VERS√ÉO ULTRA SIMPLES" admin.js; then
        echo "‚úÖ Vers√£o ultra simples aplicada"
    else
        echo "‚ùå Vers√£o ultra simples N√ÉO encontrada"
    fi
    
    if grep -q "buttonsHtml.*Editar" admin.js; then
        echo "‚úÖ C√≥digo de bot√£o Editar encontrado"
    else
        echo "‚ùå C√≥digo de bot√£o Editar N√ÉO encontrado"
    fi
    
    if grep -q "return buttonsHtml" admin.js; then
        echo "‚úÖ Return do HTML encontrado"
    else
        echo "‚ùå Return do HTML N√ÉO encontrado"
    fi
    
    echo ""
    echo "üìä Tamanho do arquivo admin.js: $(wc -l < admin.js) linhas"
    echo "üìä √öltima modifica√ß√£o: $(stat -c %y admin.js)"
    
else
    echo "‚ùå PROBLEMA CR√çTICO: admin.js n√£o encontrado!"
fi

echo ""
echo "‚ö° PR√ìXIMOS PASSOS:"
echo "=================="
echo "1. Use as p√°ginas abertas para identificar onde est√° o problema"
echo "2. Se a fun√ß√£o isolada funciona, o problema √© no admin real"
echo "3. Se nem a fun√ß√£o isolada funciona, h√° erro na l√≥gica"
echo "4. Observe especialmente os logs no console F12"
echo ""
echo "üéØ META: Identificar se o problema √©:"
echo "   A) Fun√ß√£o n√£o sendo chamada"
echo "   B) Fun√ß√£o com erro interno"  
echo "   C) HTML sendo gerado mas n√£o exibido"
echo "   D) Arquivo admin.js n√£o carregando corretamente"
echo ""
echo "üìû Ap√≥s os testes, relate o que encontrou!"
