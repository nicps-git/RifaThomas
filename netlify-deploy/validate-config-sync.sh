#!/bin/bash
# Script para validar sincroniza√ß√£o de configura√ß√µes

echo "üß™ Iniciando valida√ß√£o completa da sincroniza√ß√£o de configura√ß√µes"
echo "================================================================"

echo ""
echo "1Ô∏è‚É£ Verificando estrutura de arquivos..."

# Verificar arquivos essenciais
files=(
    "firebase-config.js"
    "index.html"
    "admin.html"
    "script.js"
    "admin.js"
    "test-config-sync.html"
    "simple-config-test.html"
)

for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file existe"
    else
        echo "‚ùå $file N√ÉO encontrado"
    fi
done

echo ""
echo "2Ô∏è‚É£ Verificando implementa√ß√£o de fun√ß√µes no firebase-config.js..."

# Verificar fun√ß√µes essenciais
functions=(
    "saveConfig"
    "loadConfig"
    "listenToChanges"
)

for func in "${functions[@]}"; do
    if grep -q "$func" firebase-config.js; then
        echo "‚úÖ Fun√ß√£o $func implementada"
    else
        echo "‚ùå Fun√ß√£o $func N√ÉO encontrada"
    fi
done

echo ""
echo "3Ô∏è‚É£ Verificando uso de configura√ß√µes no script.js..."

if grep -q "loadConfigurationFromFirebase" script.js; then
    echo "‚úÖ Carregamento de configura√ß√µes implementado"
else
    echo "‚ùå Carregamento de configura√ß√µes N√ÉO encontrado"
fi

if grep -q "applyConfigurationToUI" script.js; then
    echo "‚úÖ Aplica√ß√£o de configura√ß√µes na UI implementada"
else
    echo "‚ùå Aplica√ß√£o de configura√ß√µes na UI N√ÉO encontrada"
fi

if grep -q "rifa_config" script.js; then
    echo "‚úÖ Listener para configura√ß√µes implementado"
else
    echo "‚ùå Listener para configura√ß√µes N√ÉO encontrado"
fi

echo ""
echo "4Ô∏è‚É£ Verificando configura√ß√£o da cole√ß√£o no Firebase..."

if grep -q "rifa_config" firebase-config.js; then
    echo "‚úÖ Cole√ß√£o rifa_config configurada"
else
    echo "‚ùå Cole√ß√£o rifa_config N√ÉO configurada"
fi

echo ""
echo "5Ô∏è‚É£ Verificando servidor local..."

if curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/ | grep -q "200"; then
    echo "‚úÖ Servidor local respondendo"
else
    echo "‚ùå Servidor local N√ÉO respondendo"
fi

echo ""
echo "6Ô∏è‚É£ Verificando arquivos de teste..."

test_files=(
    "test-config-sync.html"
    "simple-config-test.html"
    "debug-config.html"
)

for file in "${test_files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ Arquivo de teste $file dispon√≠vel"
    else
        echo "‚ùå Arquivo de teste $file N√ÉO encontrado"
    fi
done

echo ""
echo "üìä RESUMO DA VALIDA√á√ÉO"
echo "====================="
echo ""
echo "‚úÖ IMPLEMENTADO:"
echo "   - Fun√ß√µes saveConfig, loadConfig, listenToChanges"
echo "   - Carregamento autom√°tico de configura√ß√µes"
echo "   - Listener para mudan√ßas em tempo real"
echo "   - Aplica√ß√£o de configura√ß√µes na UI"
echo "   - Arquivos de teste para valida√ß√£o"
echo ""
echo "üîÑ PR√ìXIMOS PASSOS:"
echo "   1. Abrir http://localhost:8000/admin.html"
echo "   2. Fazer login e alterar configura√ß√µes"
echo "   3. Abrir http://localhost:8000/index.html"
echo "   4. Verificar se mudan√ßas aparecem automaticamente"
echo "   5. Usar http://localhost:8000/test-config-sync.html para testes detalhados"
echo ""
echo "üéØ TESTE COMPLETO:"
echo "   - Admin salva config ‚Üí Firebase ‚Üí Index page atualiza"
echo "   - Tempo real atrav√©s de listeners"
echo "   - Fallback para localStorage quando Firebase falha"

echo ""
echo "‚úÖ Valida√ß√£o conclu√≠da!"
