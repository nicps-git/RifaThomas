#!/bin/bash

echo "üéØ TESTE FINAL - Verifica√ß√£o Completa da Corre√ß√£o dos Bot√µes"
echo "==========================================================="

cd /home/nicps/Documents/Projetos/RifaThomas/netlify-deploy

echo "üìã RESUMO DAS CORRE√á√ïES APLICADAS:"
echo "================================="
echo "‚úÖ Fun√ß√£o normalizeString() - Remove acentos, pontua√ß√£o e normaliza texto"
echo "‚úÖ Fun√ß√£o isDoacaoRobusta() - Verifica m√∫ltiplos campos:"
echo "   ‚Ä¢ purchase.tipo"
echo "   ‚Ä¢ purchase.metodoPagamento" 
echo "   ‚Ä¢ purchase.paymentMethod"
echo "   ‚Ä¢ purchase.observacoes"
echo "   ‚Ä¢ purchase.notes"
echo ""
echo "‚úÖ Fun√ß√£o isStatusPendenteRobusta() - Aceita varia√ß√µes:"
echo "   ‚Ä¢ pendente, pending, aguardando, nao confirmado, naoconfirmado"
echo ""
echo "‚úÖ Atualiza√ß√£o das fun√ß√µes principais:"
echo "   ‚Ä¢ createActionButtons() - Usa l√≥gica robusta"
echo "   ‚Ä¢ loadParticipants() - Filtros robustos"
echo ""

# Verificar arquivos criados
echo "üìÅ ARQUIVOS DE TESTE CRIADOS:"
echo "============================"

if [[ -f "teste-final-botoes.html" ]]; then
    echo "‚úÖ teste-final-botoes.html - Teste completo da corre√ß√£o"
else
    echo "‚ùå teste-final-botoes.html N√ÉO encontrado"
fi

if [[ -f "debug-casos-especificos.html" ]]; then
    echo "‚úÖ debug-casos-especificos.html - An√°lise de casos espec√≠ficos"
else
    echo "‚ùå debug-casos-especificos.html N√ÉO encontrado"
fi

if [[ -f "inspetor-firebase.html" ]]; then
    echo "‚úÖ inspetor-firebase.html - Inspe√ß√£o dos dados brutos"
else
    echo "‚ùå inspetor-firebase.html N√ÉO encontrado"
fi

echo ""
echo "üöÄ INICIANDO TESTES..."
echo "====================="

# Abrir p√°gina de teste final
echo "1. üéØ Abrindo teste final da corre√ß√£o..."
if command -v xdg-open &> /dev/null; then
    xdg-open "teste-final-botoes.html"
elif command -v open &> /dev/null; then
    open "teste-final-botoes.html"
else
    echo "   ‚ö†Ô∏è Abra manualmente: file://$(pwd)/teste-final-botoes.html"
fi

sleep 2

# Abrir p√°gina admin real para teste pr√°tico
echo "2. üîß Abrindo p√°gina admin real para verifica√ß√£o..."
if [[ -f "admin.html" ]]; then
    if command -v xdg-open &> /dev/null; then
        xdg-open "admin.html"
    elif command -v open &> /dev/null; then
        open "admin.html"
    else
        echo "   ‚ö†Ô∏è Abra manualmente: file://$(pwd)/admin.html"
    fi
else
    echo "   ‚ùå admin.html n√£o encontrado"
fi

echo ""
echo "üìã INSTRU√á√ïES PARA VERIFICA√á√ÉO:"
echo "==============================="
echo "1. Na p√°gina 'Teste Final':"
echo "   ‚Ä¢ Clique em 'Testar L√≥gica Completa' - deve mostrar 100% sucesso"
echo "   ‚Ä¢ Clique em 'Carregar e Analisar Dados' - deve mostrar dados reais"
echo "   ‚Ä¢ Verifique se o resultado final √© 'SUCESSO TOTAL'"
echo ""
echo "2. Na p√°gina 'Admin' real:"
echo "   ‚Ä¢ Fa√ßa login normalmente"
echo "   ‚Ä¢ Clique no filtro 'Doa√ß√µes Pendentes'"
echo "   ‚Ä¢ Verifique se TODOS os registros t√™m bot√µes ‚úÖ Confirmar / ‚ùå Rejeitar"
echo "   ‚Ä¢ Use F12 para ver logs [BUTTON-DEBUG] no console"
echo ""
echo "3. Se ainda houver problemas:"
echo "   ‚Ä¢ Verifique os logs detalhados no console"
echo "   ‚Ä¢ Use as p√°ginas de debug espec√≠fico"
echo "   ‚Ä¢ Analise os dados brutos no inspetor Firebase"
echo ""

# Verificar se h√° algum problema √≥bvio no c√≥digo
echo "üîç VERIFICA√á√ÉO R√ÅPIDA DO C√ìDIGO:"
echo "==============================="

if grep -q "isDoacaoRobusta" admin.js && grep -q "isStatusPendenteRobusta" admin.js; then
    echo "‚úÖ Fun√ß√µes robustas presentes no admin.js"
else
    echo "‚ùå PROBLEMA: Fun√ß√µes robustas n√£o encontradas no admin.js"
fi

if grep -q "normalizeString" admin.js; then
    echo "‚úÖ Fun√ß√£o de normaliza√ß√£o presente"
else
    echo "‚ùå PROBLEMA: Fun√ß√£o normalizeString n√£o encontrada"
fi

echo ""
echo "üéâ TESTE INICIADO!"
echo "=================="
echo "As p√°ginas foram abertas para verifica√ß√£o."
echo "Siga as instru√ß√µes acima para confirmar se a corre√ß√£o funcionou."
echo ""
echo "üí° DICA: Se tudo estiver correto, os bot√µes devem aparecer para"
echo "   TODAS as doa√ß√µes que t√™m status pendente, independente de:"
echo "   - Acentua√ß√£o (doa√ß√£o vs doacao)"
echo "   - Mai√∫sculas (DOA√á√ÉO vs doa√ß√£o)"
echo "   - Campo usado (tipo vs metodoPagamento vs observacoes)"
echo "   - Varia√ß√µes de status (pendente vs pending vs aguardando)"
