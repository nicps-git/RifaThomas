#!/bin/bash

# Script de corre√ß√£o completa para problemas de grava√ß√£o Firebase
echo "üîß Corre√ß√£o Completa - Firebase n√£o est√° gravando"
echo "================================================="
echo ""

# Cores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_ok() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_step() {
    echo -e "${BLUE}üìã $1${NC}"
}

# Verificar se Firebase est√° configurado
CONFIG_FILE="netlify-deploy/firebase-config.js"

if ! [ -f "$CONFIG_FILE" ] || grep -q "SUA_API_KEY_AQUI" "$CONFIG_FILE"; then
    print_error "Firebase n√£o est√° configurado!"
    print_info "Execute: ./configure-firebase.sh"
    exit 1
fi

print_ok "Firebase configurado com chaves reais"

# Extrair Project ID
PROJECT_ID=$(grep 'projectId:' "$CONFIG_FILE" | sed 's/.*projectId: *"//' | sed 's/".*//')
print_info "Project ID: $PROJECT_ID"

echo ""
echo "üîç DIAGN√ìSTICO DOS PROBLEMAS:"
echo "============================"
echo ""

echo "1Ô∏è‚É£  REGRAS DE SEGURAN√áA"
echo "   Status: ‚ùå Provavelmente restritivas"
echo "   Solu√ß√£o: Aplicar regras personalizadas"
echo ""

echo "2Ô∏è‚É£  AUTENTICA√á√ÉO AN√îNIMA"
echo "   Status: ‚ùì Precisa verificar"
echo "   Solu√ß√£o: Ativar no Firebase Console"
echo ""

echo "3Ô∏è‚É£  DOM√çNIOS AUTORIZADOS"
echo "   Status: ‚ùì Precisa verificar"
echo "   Solu√ß√£o: Adicionar localhost"
echo ""

echo "4Ô∏è‚É£  LOGS DE DEBUG"
echo "   Status: ‚úÖ Adicionados ao c√≥digo"
echo "   Solu√ß√£o: Verificar console do navegador"
echo ""

echo "üöÄ PLANO DE CORRE√á√ÉO:"
echo "===================="
echo ""

print_step "Passo 1: Aplicar Regras de Seguran√ßa"
echo ""
echo "No Firebase Console que acabou de abrir:"
echo "https://console.firebase.google.com/project/$PROJECT_ID/firestore/rules"
echo ""
echo "Substitua TODO o conte√∫do por estas regras:"
echo ""
echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
echo "‚îÇ COPIE EXATAMENTE ESTE CONTE√öDO:                         ‚îÇ"
echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
echo ""

cat firestore.rules

echo ""
echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
echo "‚îÇ DEPOIS DE COLAR, CLIQUE EM 'PUBLICAR'                  ‚îÇ"
echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
echo ""

read -p "Regras aplicadas no Firebase Console? (y/n): " -r
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    print_error "Aplique as regras primeiro!"
    exit 1
fi

print_ok "Regras aplicadas!"
echo ""

print_step "Passo 2: Verificar Authentication"
echo ""
echo "Acesse: https://console.firebase.google.com/project/$PROJECT_ID/authentication/providers"
echo ""
echo "Certifique-se de que est√£o ATIVADOS:"
echo "‚úÖ Anonymous"
echo "‚úÖ Email/Password"
echo ""

read -p "Authentication configurado? (y/n): " -r
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    print_warning "Configure Authentication antes de continuar"
fi

echo ""

print_step "Passo 3: Verificar Dom√≠nios Autorizados"
echo ""
echo "Acesse: https://console.firebase.google.com/project/$PROJECT_ID/authentication/settings"
echo ""
echo "Na se√ß√£o 'Authorized domains', adicione:"
echo "‚úÖ localhost"
echo "‚úÖ sua-url.netlify.app (se j√° fez deploy)"
echo ""

read -p "Dom√≠nios configurados? (y/n): " -r
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    print_warning "Configure dom√≠nios autorizados"
fi

echo ""

print_step "Passo 4: Teste Completo"
echo ""
print_info "Iniciando teste com logs detalhados..."

# Verificar se arquivo de teste existe
if [ ! -f "netlify-deploy/test-firebase.html" ]; then
    print_info "Criando arquivo de teste..."
    # Executar testar-firebase.sh em background para criar o arquivo
    timeout 3s ./testar-firebase.sh &>/dev/null || true
fi

echo ""
echo "üß™ TESTE MANUAL:"
echo "==============="
echo ""
echo "1. Abra um novo terminal"
echo "2. Execute: cd netlify-deploy && python3 -m http.server 8000"
echo "3. Acesse: http://localhost:8000"
echo "4. Tente fazer uma compra"
echo "5. Pressione F12 ‚Üí Console"
echo "6. Verifique se aparece:"
echo "   ‚úÖ 'üî• Firebase conectado com sucesso!'"
echo "   ‚úÖ '‚úÖ Compra salva no Firebase: purchase_xxxxx'"
echo ""

echo "üîç VERIFICAR DADOS NO FIREBASE:"
echo "=============================="
echo ""
echo "1. Acesse: https://console.firebase.google.com/project/$PROJECT_ID/firestore/data"
echo "2. Procure pela cole√ß√£o 'purchases'"
echo "3. Deve aparecer documentos com as compras"
echo ""

echo "üÜò SE AINDA N√ÉO FUNCIONAR:"
echo "=========================="
echo ""
echo "1. Verifique erros no console (F12)"
echo "2. Execute: ./diagnosticar-firebase.sh"
echo "3. Procure mensagens em vermelho no console"
echo "4. Certifique-se de que todos os passos foram seguidos"
echo ""

echo "üìû POSS√çVEIS ERROS E SOLU√á√ïES:"
echo "=============================="
echo ""
echo "‚ùå 'Firebase: Missing or insufficient permissions'"
echo "   ‚Üí Regras do Firestore n√£o foram aplicadas corretamente"
echo ""
echo "‚ùå 'Firebase: Unauthorized domain'"
echo "   ‚Üí Dom√≠nio n√£o est√° na lista de autorizados"
echo ""
echo "‚ùå 'FirebaseDB is not defined'"
echo "   ‚Üí Arquivo firebase-config.js n√£o carregou"
echo ""
echo "‚ùå 'Request failed with status 403'"
echo "   ‚Üí Problema de autentica√ß√£o ou regras"
echo ""

read -p "Deseja abrir todas as URLs necess√°rias? (y/n): " -r
if [[ $REPLY =~ ^[Yy]$ ]] && command -v xdg-open &> /dev/null; then
    print_info "Abrindo URLs importantes..."
    
    # Firestore Rules
    xdg-open "https://console.firebase.google.com/project/$PROJECT_ID/firestore/rules" &
    sleep 2
    
    # Authentication
    xdg-open "https://console.firebase.google.com/project/$PROJECT_ID/authentication/providers" &
    sleep 2
    
    # Firestore Data
    xdg-open "https://console.firebase.google.com/project/$PROJECT_ID/firestore/data" &
    sleep 2
    
    print_ok "URLs abertas!"
fi

echo ""
print_ok "Corre√ß√£o conclu√≠da!"
echo ""
print_info "PR√ìXIMOS PASSOS:"
echo "1. Aplicar regras no Firebase Console"
echo "2. Testar aplica√ß√£o localmente"
echo "3. Verificar se dados aparecem no Firestore"
echo "4. Se funcionar, fazer deploy final"

echo ""
print_warning "LEMBRE-SE: Depois de cada mudan√ßa no Firebase, aguarde 1-2 minutos para propagar!"
